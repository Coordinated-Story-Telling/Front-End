{"ast":null,"code":"import _defineProperty from \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as StoryAction from '../actions/actions';\nconst initialState = {\n  stories: [],\n  isFetching: false,\n  error: '',\n  filteredStories: []\n};\n\nconst steducer = (state = initialState, action) => {\n  switch (action.type) {\n    case StoryAction.GET_STORY:\n      console.log(action);\n      return {\n        stories: action.stories\n      };\n\n    case StoryAction.POST_STORY:\n      return {\n        stories: [...state.stories, action.story]\n      };\n\n    case StoryAction.DELETE_STORY:\n      return {\n        stories: [...state.stories.slice(0, action.index), ...state.stories.slice(action.index)]\n      };\n\n    case StoryAction.PUT_STORY:\n      return {\n        stories: [...state.stories.slice(0, action.index), action.story, ...state.stories.slice(action.index)]\n      };\n\n    case StoryAction.FILTER_STORY:\n      console.log(action.selectedCountry);\n\n      if (action.selectedCountry === 'All') {\n        return _objectSpread({}, state, {\n          stories: state.stories\n        });\n      } else {\n        console.log(state.stories.filter(story => story.country === action.selectedCountry));\n        return _objectSpread({}, state, {\n          filteredStories: state.stories.filter(story => story.countries === action.selectedCountry)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case StoryAction.FETCH_STORY_START:\n      console.log(action);\n      return _objectSpread({}, state, {\n        error: '',\n        isFetching: true\n      });\n\n    case StoryAction.FETCH_STORY_SUCCESS:\n      return {\n        stories: action.payload,\n        error: '',\n        isFetching: false\n      };\n\n    case StoryAction.FETCH_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: 'Failed to get stories, please try again!',\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/reducers/reducer.js"],"names":["StoryAction","initialState","stories","isFetching","error","filteredStories","steducer","state","action","type","GET_STORY","console","log","POST_STORY","story","DELETE_STORY","slice","index","PUT_STORY","FILTER_STORY","selectedCountry","filter","country","countries","reducer","FETCH_STORY_START","FETCH_STORY_SUCCESS","payload","FETCH_STORY_FAILURE"],"mappings":"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","sourcesContent":["import * as StoryAction from '../actions/actions'\nconst initialState = {\n    stories: [],\n    isFetching: false,\n    error: '',\n    filteredStories: []\n}\n\nconst steducer = (state=initialState, action) => {\n    switch(action.type) {\n        case StoryAction.GET_STORY: \n        console.log(action)\n        return {\n            stories: action.stories,\n        }\n\n        case StoryAction.POST_STORY: \n        return {\n            stories: [...state.stories, action.story]\n        }\n\n        case StoryAction.DELETE_STORY: \n        return {\n            stories: [\n                ...state.stories.slice(0, action.index),\n                ...state.stories.slice(action.index)\n            ]\n        }\n\n        case StoryAction.PUT_STORY: \n        return {\n            stories: [\n                ...state.stories.slice(0, action.index),\n                action.story,\n                ...state.stories.slice(action.index)\n            ]\n        }\n\n        case StoryAction.FILTER_STORY:\n        console.log(action.selectedCountry)\n        if (action.selectedCountry === 'All') {\n            return { ...state, stories: state.stories }\n        }\n        else {\n            console.log(state.stories.filter(story => story.country === action.selectedCountry))\n            return { ...state, filteredStories: state.stories.filter(story => story.countries === action.selectedCountry) }\n        }\n\n        default:\n        return state\n    }\n}\n\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case StoryAction.FETCH_STORY_START: \n        console.log(action)\n        return {\n            ...state,\n            error: '',\n            isFetching: true\n        }\n\n        case StoryAction.FETCH_STORY_SUCCESS: \n        return {\n            stories: action.payload,\n            error: '',\n            isFetching: false\n        }\n\n        case StoryAction.FETCH_STORY_FAILURE: \n        return {\n            ...state,\n            error: 'Failed to get stories, please try again!',\n            isFetching: false\n        }\n\n        default:\n        return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}