{"ast":null,"code":"var _jsxFileName = \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Route, Redirect } from 'react-router-dom';\nimport Stories from './components/Stories';\nimport { Story, StoryEditor } from './components/Story';\nimport Register from './components/Register';\nimport './App.css';\nimport { fetchStory } from './actions/actions';\nimport { signOut } from './actions/login';\nimport { connect } from 'react-redux';\nimport SignIn from './components/SignIn';\nimport MyStory from './components/MyStory';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.props.fetchStory();\n    };\n\n    this.filterStoriesByCountry = event => {\n      const country = event.target.value;\n      this.setState({\n        selectedCountry: country\n      });\n    };\n\n    this.SignOut = () => {\n      this.props.signOut();\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      filteredStories: [],\n      selectedCountry: \"All Countries\",\n      countries: [\"All Countries\", \"Bolivia\", \"Brazil\", \"Cambodia\", \"Colombia\", \"Ecuador\", \"El Salvador\", \"Ghana\", \"Guatemala\", \"Haiti\", \"Honduras\", \"Kiribati\", \"Madagascar\", \"Mongolia\", \"Nicaragua\", \"Paraguay\", \"Peru\", \"Philippines\", \"Sierra Leone\", \"Zimbabwe\"]\n    };\n  }\n\n  render() {\n    // console.log(this.props)\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: \"/stories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Stories\"), localStorage.token ? React.createElement(NavLink, {\n      to: \"/mystories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"My Stories\") : React.createElement(NavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Log In\"), localStorage.token ? React.createElement(\"button\", {\n      onClick: this.SignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign Out\") : React.createElement(NavLink, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign Up\")), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/stories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/stories\",\n      render: props => React.createElement(Stories, Object.assign({}, props, this.props, this.state, {\n        filterStoriesByCountry: this.filterStoriesByCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/stories/:id\",\n      render: props => React.createElement(Story, Object.assign({}, props, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/stories/:id/edit\",\n      render: props => React.createElement(StoryEditor, Object.assign({}, props, this.props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/mystories\",\n      render: props => {\n        if (localStorage.token) return React.createElement(MyStory, Object.assign({}, props, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => {\n        if (this.props.currentUser) {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(SignIn, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: props => {\n        if (this.props.newUser) {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Register, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Copywrite: sally sal\"));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  console.log(state);\n  return {\n    stories: state.story.stories,\n    currentUser: state.login.currentUser,\n    newUser: state.register.currentUser,\n    myStories: state.userStory.myStories\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStory,\n  signOut\n})(App);","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/App.js"],"names":["React","Component","BrowserRouter","Router","NavLink","Route","Redirect","Stories","Story","StoryEditor","Register","fetchStory","signOut","connect","SignIn","MyStory","App","constructor","componentDidMount","props","filterStoriesByCountry","event","country","target","value","setState","selectedCountry","SignOut","state","filteredStories","countries","render","localStorage","token","currentUser","newUser","mapStatetoProps","console","log","stories","story","login","register","myStories","userStory"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Route, Redirect  } from 'react-router-dom';\n\nimport Stories from './components/Stories'\nimport { Story, StoryEditor } from './components/Story'\nimport Register from './components/Register'\n\nimport './App.css';\n\nimport { fetchStory } from './actions/actions'\nimport { signOut } from './actions/login'\nimport { connect } from 'react-redux'\nimport SignIn from './components/SignIn';\nimport MyStory from './components/MyStory';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      filteredStories: [],\n      selectedCountry: \"All Countries\",\n      countries: [\"All Countries\", \"Bolivia\", \"Brazil\", \"Cambodia\", \"Colombia\", \"Ecuador\", \"El Salvador\", \"Ghana\", \"Guatemala\", \"Haiti\", \"Honduras\", \"Kiribati\", \"Madagascar\", \"Mongolia\", \"Nicaragua\", \"Paraguay\", \"Peru\", \"Philippines\", \"Sierra Leone\", \"Zimbabwe\"],\n    }\n  }\n  componentDidMount = () => {\n    this.props.fetchStory()\n  }\n\n  filterStoriesByCountry = event => {\n    const country = event.target.value\n    this.setState({\n      selectedCountry: country,\n    })\n  }\n\n  SignOut = () => {\n    this.props.signOut()\n    return <Redirect to='/' ></Redirect>\n  }\n\n  render() {\n    // console.log(this.props)\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav>\n            <NavLink exact to='/stories'>Stories</NavLink>\n            {localStorage.token ? \n              <NavLink to={`/mystories`}>My Stories</NavLink> :\n              <NavLink to='/login'>Log In</NavLink>\n            }\n            \n            {localStorage.token ? \n              <button onClick={this.SignOut}>Sign Out</button> :\n              <NavLink to='/signup'>Sign Up</NavLink>\n            }\n          </nav>\n\n          <Route \n          exact path='/' \n          render={() => <Redirect to='/stories' />} />\n          <Route \n          exact path='/stories' \n          render={\n            props => <Stories \n            {...props} \n            {...this.props} \n            {...this.state}\n            filterStoriesByCountry={this.filterStoriesByCountry} />} \n          />\n          <Route exact path='/stories/:id' render={props => <Story {...props} {...this.props}/>}/> \n          <Route path='/stories/:id/edit' render={props => <StoryEditor {...props} {...this.props} {...this.state}/>}/> \n\n          <Route exact path='/mystories' render={ props => { \n            if (localStorage.token) return <MyStory {...props} {...this.props}/>\n            return <Redirect to='/' />\n          }}/>\n          \n          <Route path='/login' render={ props => { \n            if (this.props.currentUser) {\n              return <Redirect to='/' /> \n            } else {\n              return <SignIn \n              {...props} \n              />\n            }\n          }}/>\n\n          <Route path='/signup' render={ props => { \n            if (this.props.newUser) {\n              return <Redirect to='/' />\n            } else {\n              return <Register \n              {...props} \n              />\n            }\n          }}/>\n        </div>\n        <nav>Copywrite: sally sal</nav>\n      </Router>\n    );\n  }\n}\n\nconst mapStatetoProps = state => {\n  console.log(state)\n  return {\n    stories: state.story.stories,\n    currentUser: state.login.currentUser,\n    newUser: state.register.currentUser,\n    myStories: state.userStory.myStories,\n\n  }\n} \n\nexport default connect(mapStatetoProps, { fetchStory, signOut })(App)"]},"metadata":{},"sourceType":"module"}