{"ast":null,"code":"// import Axios from \"axios\";\nimport axiosWithAuth from '../utils/axiousAuth'; // LIVE DATA\n\nexport const FETCH_USER_STORY_START = 'FETCH_USER_STORY_START';\nexport const FETCH_USER_STORY_SUCCESS = 'FETCH_USER_STORY_SUCCESS';\nexport const FETCH_USER_STORY_FAILURE = 'FETCH_USER_STORY_FAILURE';\nexport const getUserStories = () => dispatch => {\n  dispatch({\n    type: FETCH_USER_STORY_START\n  });\n  axiosWithAuth().get(\"https://coordinated-stories.herokuapp.com/api/users/12\").then(res => {\n    console.log(res.data, 'data');\n    dispatch({\n      type: FETCH_USER_STORY_SUCCESS,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: FETCH_USER_STORY_FAILURE,\n      payload: error\n    });\n  });\n};\ngetUserStories();\nexport const POST_USER_STORY_START = 'POST_USER_STORY_START';\nexport const POST_USER_STORY_SUCCESS = 'POST_USER_STORY_SUCCESS';\nexport const POST_USER_STORY_FAILURE = 'POST_USER_STORY_FAILURE';\nexport const postUserStories = newStory => dispatch => {\n  dispatch({\n    type: POST_USER_STORY_START\n  });\n  return axiosWithAuth().post(\"https://coordinated-stories.herokuapp.com/api/stories\", newStory).then(res => {\n    dispatch({\n      type: POST_USER_STORY_SUCCESS,\n      newStory: res.data\n    });\n    return true;\n  }).catch(error => {\n    dispatch({\n      type: POST_USER_STORY_FAILURE,\n      error: error\n    });\n  });\n};\nuseEffect(() => {\n  axiosWithAuth.get(\"https://coordinated-stories.herokuapp.com/api/user/12\").then(res => {\n    dispatch({\n      type: FETCH_USER_STORY_START,\n      payload: res.data\n    });\n  }).catch(err => console.log(err.response));\n}, []);\nexport const DELETE_USER_STORY_START = 'DELETE_USER_STORY_START';\nexport const DELETE_USER_STORY_SUCCESS = 'DELETE_USER_STORY_SUCCESS';\nexport const DELETE_USER_STORY_FAILURE = 'DELETE_USER_STORY_FAILURE';\nexport const deleteUserStories = (index, storyid) => dispatch => {\n  dispatch({\n    type: DELETE_USER_STORY_START\n  });\n  return axiosWithAuth().delete(\"https://coordinated-stories.herokuapp.com/api/users/1\".concat(storyid)).then(res => {\n    dispatch({\n      type: DELETE_USER_STORY_SUCCESS,\n      index: storyid\n    });\n  }).catch(error => {\n    dispatch({\n      type: DELETE_USER_STORY_FAILURE,\n      error: error\n    });\n  });\n};\nexport const PUT_USER_STORY_START = 'PUT_USER_STORY_START';\nexport const PUT_USER_STORY_SUCCESS = 'PUT_USER_STORY_SUCCESS';\nexport const PUT_USER_STORY_FAILURE = 'PUT_USER_STORY_FAILURE';\nexport const putUserStories = (storyid, story) => dispatch => {\n  dispatch({\n    type: PUT_USER_STORY_START\n  });\n  return axiosWithAuth().put(\"https://coordinated-stories.herokuapp.com/api/stories/\".concat(storyid), story).then(res => {\n    console.dir(res);\n    dispatch({\n      type: PUT_USER_STORY_SUCCESS,\n      index: storyid,\n      updatedStory: story\n    });\n    return true;\n  }).catch(error => {\n    dispatch({\n      type: PUT_USER_STORY_FAILURE,\n      error: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/actions/userStories.js"],"names":["axiosWithAuth","FETCH_USER_STORY_START","FETCH_USER_STORY_SUCCESS","FETCH_USER_STORY_FAILURE","getUserStories","dispatch","type","get","then","res","console","log","data","payload","catch","error","POST_USER_STORY_START","POST_USER_STORY_SUCCESS","POST_USER_STORY_FAILURE","postUserStories","newStory","post","useEffect","err","response","DELETE_USER_STORY_START","DELETE_USER_STORY_SUCCESS","DELETE_USER_STORY_FAILURE","deleteUserStories","index","storyid","delete","PUT_USER_STORY_START","PUT_USER_STORY_SUCCESS","PUT_USER_STORY_FAILURE","putUserStories","story","put","dir","updatedStory"],"mappings":"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","sourcesContent":["// import Axios from \"axios\";\nimport axiosWithAuth from '../utils/axiousAuth';\n\n// LIVE DATA\n\nexport const FETCH_USER_STORY_START = 'FETCH_USER_STORY_START';\nexport const FETCH_USER_STORY_SUCCESS = 'FETCH_USER_STORY_SUCCESS';\nexport const FETCH_USER_STORY_FAILURE = 'FETCH_USER_STORY_FAILURE';\n\nexport const getUserStories = () => dispatch => {\n    dispatch({\n        type: FETCH_USER_STORY_START\n    });\n    axiosWithAuth()\n    .get(`https://coordinated-stories.herokuapp.com/api/users/12`)\n    .then(res => { \n        console.log(res.data,'data')\n        dispatch({\n            type: FETCH_USER_STORY_SUCCESS,\n            payload: res.data\n        })\n    })\n    .catch(error => {\n        dispatch({\n            type: FETCH_USER_STORY_FAILURE,\n            payload: error\n        })\n    })\n}\n\ngetUserStories();\n\nexport const POST_USER_STORY_START = 'POST_USER_STORY_START';\nexport const POST_USER_STORY_SUCCESS = 'POST_USER_STORY_SUCCESS';\nexport const POST_USER_STORY_FAILURE = 'POST_USER_STORY_FAILURE';\n\nexport const postUserStories = newStory => dispatch => {\n    dispatch({\n        type: POST_USER_STORY_START\n    });\n    return axiosWithAuth()\n    .post(`https://coordinated-stories.herokuapp.com/api/stories`, newStory)\n    .then(res => {\n        dispatch({\n            type: POST_USER_STORY_SUCCESS,\n            newStory: res.data\n        })\n        return true\n    })\n    .catch(error => {\n        dispatch({\n            type: POST_USER_STORY_FAILURE,\n            error: error\n        })\n    })\n}\nuseEffect(()=>{\n    axiosWithAuth\n    .get(`https://coordinated-stories.herokuapp.com/api/user/12`)\n    .then(res => {\n       dispatch({\n           type: FETCH_USER_STORY_START,\n           payload: res.data\n\n       })\n      })\n      .catch(err => console.log(err.response));\n  },[])\n\nexport const DELETE_USER_STORY_START = 'DELETE_USER_STORY_START';\nexport const DELETE_USER_STORY_SUCCESS = 'DELETE_USER_STORY_SUCCESS';\nexport const DELETE_USER_STORY_FAILURE = 'DELETE_USER_STORY_FAILURE';\n\nexport const deleteUserStories = (index, storyid) => dispatch => {\n    dispatch({\n        type: DELETE_USER_STORY_START\n    });\n    return axiosWithAuth()\n    .delete(`https://coordinated-stories.herokuapp.com/api/users/1${storyid}`)\n    .then(res => {\n        dispatch({\n            type: DELETE_USER_STORY_SUCCESS,\n            index: storyid\n        })\n    })\n    .catch(error => {\n        dispatch({\n            type: DELETE_USER_STORY_FAILURE,\n            error: error\n        })\n    })\n}\n\nexport const PUT_USER_STORY_START = 'PUT_USER_STORY_START';\nexport const PUT_USER_STORY_SUCCESS = 'PUT_USER_STORY_SUCCESS';\nexport const PUT_USER_STORY_FAILURE = 'PUT_USER_STORY_FAILURE';\n\nexport const putUserStories = (storyid, story) => dispatch => {\n    dispatch({\n        type: PUT_USER_STORY_START\n    });\n    return axiosWithAuth()\n    .put(`https://coordinated-stories.herokuapp.com/api/stories/${storyid}`, story)\n    .then(res => {\n        console.dir(res)\n        dispatch({\n            type: PUT_USER_STORY_SUCCESS,\n            index: storyid,\n            updatedStory: story\n        })\n        return true\n    })\n    .catch(error => {\n        dispatch({\n            type: PUT_USER_STORY_FAILURE,\n            error: error\n        })\n    })\n}\n"]},"metadata":{},"sourceType":"module"}