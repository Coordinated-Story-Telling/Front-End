{"ast":null,"code":"import _defineProperty from \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as StoryAction from '../actions/actions';\nconst initialState = {\n  stories: [],\n  isFetching: false,\n  error: '',\n  filteredStories: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case StoryAction.FETCH_STORY_START:\n      console.log(action);\n      return _objectSpread({}, state, {\n        error: '',\n        isFetching: true\n      });\n\n    case StoryAction.FETCH_STORY_SUCCESS:\n      return {\n        stories: action.payload,\n        error: '',\n        isFetching: false\n      };\n\n    case StoryAction.FETCH_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: 'Failed to get stories, please try again!',\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/reducers/reducer.js"],"names":["StoryAction","initialState","stories","isFetching","error","filteredStories","reducer","state","action","type","FETCH_STORY_START","console","log","FETCH_STORY_SUCCESS","payload","FETCH_STORY_FAILURE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACN,YAAP,EAAqBO,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAW,CAACU,iBAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,+BACOD,KADP;AAEIH,QAAAA,KAAK,EAAE,EAFX;AAGID,QAAAA,UAAU,EAAE;AAHhB;;AAMA,SAAKH,WAAW,CAACa,mBAAjB;AACA,aAAO;AACHX,QAAAA,OAAO,EAAEM,MAAM,CAACM,OADb;AAEHV,QAAAA,KAAK,EAAE,EAFJ;AAGHD,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMA,SAAKH,WAAW,CAACe,mBAAjB;AACA,+BACOR,KADP;AAEIH,QAAAA,KAAK,EAAE,0CAFX;AAGID,QAAAA,UAAU,EAAE;AAHhB;;AAMA;AACA,aAAOI,KAAP;AAxBJ;AA0BH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import * as StoryAction from '../actions/actions'\nconst initialState = {\n    stories: [],\n    isFetching: false,\n    error: '',\n    filteredStories: []\n}\n\n\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case StoryAction.FETCH_STORY_START: \n        console.log(action)\n        return {\n            ...state,\n            error: '',\n            isFetching: true\n        }\n\n        case StoryAction.FETCH_STORY_SUCCESS: \n        return {\n            stories: action.payload,\n            error: '',\n            isFetching: false\n        }\n\n        case StoryAction.FETCH_STORY_FAILURE: \n        return {\n            ...state,\n            error: 'Failed to get stories, please try again!',\n            isFetching: false\n        }\n\n        default:\n        return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}