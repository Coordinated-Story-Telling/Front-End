{"ast":null,"code":"var _jsxFileName = \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/components/Story.js\";\nimport React from 'react';\nimport './styles/Story.css';\nexport const Story = props => {\n  const index = props.match.params.id,\n        stories = props.stories;\n  return stories.filter(story => story.id.toString() === index).map(story => React.createElement(\"div\", {\n    key: story.title,\n    className: \"story-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, story.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, story.country), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, story.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Created on \".concat(new Date(story.created_at))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Updated on \".concat(new Date(story.updated_at))), React.createElement(\"form\", {\n    action: \"https://www.paypal.com/cgi-bin/webscr\",\n    method: \"post\",\n    target: \"_top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"cmd\",\n    value: \"_s-xclick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"hosted_button_id\",\n    value: \"WGDXBHWLHWZAN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"invoice\",\n    value: story.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"image\",\n    src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\",\n    border: \"0\",\n    name: \"submit\",\n    title: \"Donate to \" + story.title,\n    alt: \"Donate with PayPal button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    alt: \"\",\n    border: \"0\",\n    src: \"https://www.paypal.com/en_US/i/scr/pixel.gif\",\n    width: \"1\",\n    height: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n};\nexport const StoryEditor = props => {\n  const index = props.match.params.id,\n        stories = props.stories;\n  return stories.filter(story => story.id.toString() === index).map(story => React.createElement(\"form\", {\n    key: story.title,\n    className: \"story-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: story.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    value: story.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.countries.map(country => {\n    // if (country === story.country) return <option selected>{country}</option>\n    return React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, country);\n  })), React.createElement(\"textarea\", {\n    value: story.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Created on \".concat(new Date(story.created_at))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Updated on \".concat(new Date(story.updated_at)))));\n};","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/components/Story.js"],"names":["React","Story","props","index","match","params","id","stories","filter","story","toString","map","title","country","description","Date","created_at","updated_at","StoryEditor","countries"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './styles/Story.css'\n\nexport const Story = props => {\n    const { match : { params :{ id: index} }, stories } = props;\n    return stories.filter(story => story.id.toString() === index).map(story => (\n        <div key={story.title} className='story-view'>\n            <h3>{story.title}</h3>\n            <h4>{story.country}</h4>\n            <p>{story.description}</p>\n            <p>{`Created on ${new Date(story.created_at)}`}</p>\n            <p>{`Updated on ${new Date(story.updated_at)}`}</p>\n\n            <form \n            action=\"https://www.paypal.com/cgi-bin/webscr\" \n            method=\"post\" \n            target=\"_top\">\n                <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n                <input type=\"hidden\" name=\"hosted_button_id\" value=\"WGDXBHWLHWZAN\" />\n                <input type=\"hidden\" name=\"invoice\" value={story.id} />\n                <input \n                type=\"image\" \n                src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" \n                border=\"0\" \n                name=\"submit\" \n                title={\"Donate to \" + story.title} \n                alt=\"Donate with PayPal button\" />\n                <img \n                alt=\"\" \n                border=\"0\" \n                src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" \n                width=\"1\" \n                height=\"1\" />\n            </form>\n        </div>)\n    )\n}\n\n\n\nexport const StoryEditor = props => {\n    const { match : { params :{ id: index} }, stories } = props;\n    return stories.filter(story => story.id.toString() === index).map(story => (\n        <form key={story.title} className='story-view'>\n            <input value={story.title}/>\n            <select value={story.country} >\n                {\n                    props.countries.map(country => {\n                        // if (country === story.country) return <option selected>{country}</option>\n                        return <option>{country}</option>\n                    })\n                }\n            </select>\n            <textarea value={story.description}/>\n            <p>{`Created on ${new Date(story.created_at)}`}</p>\n            <p>{`Updated on ${new Date(story.updated_at)}`}</p>\n\n        </form>)\n    )\n}\n"]},"metadata":{},"sourceType":"module"}