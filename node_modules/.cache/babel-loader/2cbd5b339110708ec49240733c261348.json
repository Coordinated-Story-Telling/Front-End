{"ast":null,"code":"import _defineProperty from \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as StoryAction from '../actions/userStories';\nconst initialState = {\n  myStories: [],\n  isFetching: false,\n  error: '',\n  isCreating: false,\n  newStory: '',\n  filteredStories: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case StoryAction.FETCH_USER_STORY_START:\n      console.log(action);\n      return _objectSpread({}, state, {\n        error: '',\n        isFetching: true\n      });\n\n    case StoryAction.FETCH_USER_STORY_SUCCESS:\n      return {\n        myStories: action.payload,\n        error: '',\n        isFetching: false\n      };\n\n    case StoryAction.FETCH_USER_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: 'Failed to get myStories, please try again!',\n        isFetching: false\n      });\n\n    case StoryAction.POST_USER_STORY_START:\n      return _objectSpread({}, state, {\n        newStory: '',\n        // error: 'Failed to get myStories, please try again!',\n        isCreating: false\n      });\n\n    case StoryAction.POST_USER_STORY_SUCCESS:\n      return _objectSpread({}, state, {\n        myStories: [...state.myStories, action.newStory],\n        newStory: action.newStory,\n        // error: 'Failed to get myStories, please try again!',\n        isCreating: false\n      });\n\n    case StoryAction.POST_USER_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        newStory: '',\n        error: 'Failed to post new story, please try again!',\n        isCreating: false\n      });\n\n    case StoryAction.DELETE_USER_STORY_START:\n      return _objectSpread({}, state);\n\n    case StoryAction.DELETE_USER_STORY_SUCCESS:\n      return _objectSpread({}, state, {\n        myStories: [...state.myStories.filter(story => story.id !== action.index)]\n      });\n\n    case StoryAction.DELETE_USER_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: 'Failed to delete story, please try again!'\n      });\n\n    case StoryAction.PUT_USER_STORY_START:\n      return _objectSpread({}, state);\n\n    case StoryAction.PUT_USER_STORY_SUCCESS:\n      return _objectSpread({}, state);\n\n    case StoryAction.PUT_USER_STORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: 'Failed to update story, please try again!'\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/src/reducers/userStoriesReducer.js"],"names":["StoryAction","initialState","myStories","isFetching","error","isCreating","newStory","filteredStories","reducer","state","action","type","FETCH_USER_STORY_START","console","log","FETCH_USER_STORY_SUCCESS","payload","FETCH_USER_STORY_FAILURE","POST_USER_STORY_START","POST_USER_STORY_SUCCESS","POST_USER_STORY_FAILURE","DELETE_USER_STORY_START","DELETE_USER_STORY_SUCCESS","filter","story","id","index","DELETE_USER_STORY_FAILURE","PUT_USER_STORY_START","PUT_USER_STORY_SUCCESS","PUT_USER_STORY_FAILURE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAMjBC,EAAAA,UAAU,EAAE,KANK;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AASjBC,EAAAA,eAAe,EAAE;AATA,CAArB;;AAYA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACR,YAAP,EAAqBS,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAW,CAACY,sBAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,+BACOD,KADP;AAEIL,QAAAA,KAAK,EAAE,EAFX;AAGID,QAAAA,UAAU,EAAE;AAHhB;;AAMA,SAAKH,WAAW,CAACe,wBAAjB;AACA,aAAO;AACHb,QAAAA,SAAS,EAAEQ,MAAM,CAACM,OADf;AAEHZ,QAAAA,KAAK,EAAE,EAFJ;AAGHD,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMA,SAAKH,WAAW,CAACiB,wBAAjB;AACA,+BACOR,KADP;AAEIL,QAAAA,KAAK,EAAE,4CAFX;AAGID,QAAAA,UAAU,EAAE;AAHhB;;AAOA,SAAKH,WAAW,CAACkB,qBAAjB;AACA,+BACOT,KADP;AAEIH,QAAAA,QAAQ,EAAE,EAFd;AAGI;AACAD,QAAAA,UAAU,EAAE;AAJhB;;AAQA,SAAKL,WAAW,CAACmB,uBAAjB;AACA,+BACOV,KADP;AAEIP,QAAAA,SAAS,EAAE,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAqBQ,MAAM,CAACJ,QAA5B,CAFf;AAGIA,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAHrB;AAII;AACAD,QAAAA,UAAU,EAAE;AALhB;;AASA,SAAKL,WAAW,CAACoB,uBAAjB;AACA,+BACOX,KADP;AAEIH,QAAAA,QAAQ,EAAE,EAFd;AAGIF,QAAAA,KAAK,EAAE,6CAHX;AAIIC,QAAAA,UAAU,EAAE;AAJhB;;AAOA,SAAKL,WAAW,CAACqB,uBAAjB;AACA,+BACOZ,KADP;;AAKA,SAAKT,WAAW,CAACsB,yBAAjB;AACA,+BACOb,KADP;AAEIP,QAAAA,SAAS,EAAE,CAAC,GAAGO,KAAK,CAACP,SAAN,CAAgBqB,MAAhB,CAAuBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaf,MAAM,CAACgB,KAApD,CAAJ;AAFf;;AAMA,SAAK1B,WAAW,CAAC2B,yBAAjB;AACA,+BACOlB,KADP;AAEIL,QAAAA,KAAK,EAAE;AAFX;;AAIA,SAAKJ,WAAW,CAAC4B,oBAAjB;AACA,+BACOnB,KADP;;AAKA,SAAKT,WAAW,CAAC6B,sBAAjB;AACA,+BACOpB,KADP;;AAMA,SAAKT,WAAW,CAAC8B,sBAAjB;AACA,+BACOrB,KADP;AAEIL,QAAAA,KAAK,EAAE;AAFX;;AAKA;AACA,aAAOK,KAAP;AAzFJ;AA2FH,CA5FD;;AA8FA,eAAeD,OAAf","sourcesContent":["import * as StoryAction from '../actions/userStories'\nconst initialState = {\n    myStories: [],\n    isFetching: false,\n    error: '',\n\n    \n    isCreating: false,\n    newStory: '',\n\n    filteredStories: []\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case StoryAction.FETCH_USER_STORY_START: \n        console.log(action)\n        return {\n            ...state,\n            error: '',\n            isFetching: true\n        }\n\n        case StoryAction.FETCH_USER_STORY_SUCCESS: \n        return {\n            myStories: action.payload,\n            error: '',\n            isFetching: false\n        }\n\n        case StoryAction.FETCH_USER_STORY_FAILURE: \n        return {\n            ...state,\n            error: 'Failed to get myStories, please try again!',\n            isFetching: false\n        }\n\n        \n        case StoryAction.POST_USER_STORY_START: \n        return {\n            ...state,\n            newStory: '',\n            // error: 'Failed to get myStories, please try again!',\n            isCreating: false\n        }\n\n        \n        case StoryAction.POST_USER_STORY_SUCCESS: \n        return {\n            ...state,\n            myStories: [...state.myStories, action.newStory],\n            newStory: action.newStory,\n            // error: 'Failed to get myStories, please try again!',\n            isCreating: false\n        }\n\n        \n        case StoryAction.POST_USER_STORY_FAILURE: \n        return {\n            ...state,\n            newStory: '',\n            error: 'Failed to post new story, please try again!',\n            isCreating: false\n        }\n        \n        case StoryAction.DELETE_USER_STORY_START: \n        return {\n            ...state\n        }\n\n        \n        case StoryAction.DELETE_USER_STORY_SUCCESS: \n        return {\n            ...state,\n            myStories: [...state.myStories.filter(story => story.id !== action.index)]\n        }\n\n        \n        case StoryAction.DELETE_USER_STORY_FAILURE: \n        return {\n            ...state,\n            error: 'Failed to delete story, please try again!',\n        }\n        case StoryAction.PUT_USER_STORY_START: \n        return {\n            ...state\n        }\n\n        \n        case StoryAction.PUT_USER_STORY_SUCCESS: \n        return {\n            ...state,\n            // myStories: [...state.myStories.filter(story => story.id !== action.index), action.updatedStory]\n        }\n\n        \n        case StoryAction.PUT_USER_STORY_FAILURE: \n        return {\n            ...state,\n            error: 'Failed to update story, please try again!',\n        }\n\n        default:\n        return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}