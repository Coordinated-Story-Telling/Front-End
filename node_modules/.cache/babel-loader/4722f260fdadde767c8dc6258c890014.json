{"ast":null,"code":"var _jsxFileName = \"/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/components/MyStory.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserStories, postUserStories, deleteUserStories, putUserStories } from '../actions/userStories';\nimport { NavLink } from 'react-router-dom';\nimport './styles/MyStory.css';\n\nclass MyStory extends React.Component {\n  constructor() {\n    super();\n\n    this.editingStory = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.dir(this.state);\n    };\n\n    this.createStory = event => {\n      event.preventDefault();\n      this.props.postUserStories({\n        title: this.state.title,\n        description: this.state.description,\n        country: this.state.selectedCountry\n      }).then(success => {\n        if (success) this.setState({\n          selectedCountry: 'Bolivia',\n          description: '',\n          title: ''\n        });\n      });\n    };\n\n    this.saveStory = event => {\n      event.preventDefault();\n\n      if (this.state.storyId) {\n        this.props.putUserStories(this.state.storyId, {\n          // ...this.state.selectedStory,\n          title: this.state.title,\n          description: this.state.description,\n          country: this.state.selectedCountry\n        }).then(success => {\n          if (success) this.clearForm();\n          this.props.getUserStories();\n        });\n      } else {\n        this.props.postUserStories({\n          title: this.state.title,\n          description: this.state.description,\n          country: this.state.selectedCountry\n        }).then(success => {\n          if (success) this.clearForm();\n        });\n      }\n    };\n\n    this.editStory = storyId => {\n      // event.preventDefault()\n      // console.log(storyId)\n      const selectedStory = this.props.myStories.filter(story => story.id === storyId)[0];\n      this.setState({\n        // selectedStory: selectedStory,\n        storyId: storyId,\n        selectedCountry: selectedStory.country,\n        title: selectedStory.title,\n        description: selectedStory.description\n      }); // console.dir(selectedStory)\n    };\n\n    this.clearForm = event => {\n      if (event) event.preventDefault();\n      this.setState({\n        storyId: null,\n        selectedCountry: 'Bolivia',\n        description: '',\n        title: ''\n      });\n    };\n\n    this.render = props => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"story-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"create & edit your story here\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        minLength: \"3\",\n        required: true,\n        value: this.state.title,\n        onChange: this.editingStory,\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: this.editingStory,\n        value: this.state.selectedCountry,\n        placeholder: \"Select a Country\",\n        name: \"selectedCountry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.countries.map(country => React.createElement(\"option\", {\n        key: country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, country)))), React.createElement(\"textarea\", {\n        type: \"text\",\n        placeholder: \"description\",\n        minLength: \"3\",\n        required: true,\n        value: this.state.description,\n        onChange: this.editingStory,\n        name: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.saveStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Clear\"))), React.createElement(\"ul\", {\n        className: \"stories-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"hello darkness my old friend \", React.createElement(\"button\", {\n        onClick: () => this.editStory(story.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.props.deleteUserStories(index, story.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Remove\")), \")) } */}\"));\n    };\n\n    this.state = {\n      Stories: [],\n      storyId: null,\n      selectedStory: null,\n      selectedCountry: 'Bolivia',\n      description: '',\n      title: '',\n      countries: [\"Bolivia\", \"Brazil\", \"Cambodia\", \"Colombia\", \"Ecuador\", \"El Salvador\", \"Ghana\", \"Guatemala\", \"Haiti\", \"Honduras\", \"Kiribati\", \"Madagascar\", \"Mongolia\", \"Nicaragua\", \"Paraguay\", \"Peru\", \"Philippines\", \"Sierra Leone\", \"Zimbabwe\"]\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserStories();\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  console.log(state);\n  return {\n    myStories: state.userStory.myStories\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  getUserStories,\n  postUserStories,\n  deleteUserStories,\n  putUserStories\n})(MyStory);","map":{"version":3,"sources":["/Users/sallysal/Documents/lambda/buildweek4/actualfactualbuildweek/Front-End/coordinated-story-telling/src/components/MyStory.js"],"names":["React","connect","getUserStories","postUserStories","deleteUserStories","putUserStories","NavLink","MyStory","Component","constructor","editingStory","event","setState","target","name","value","console","dir","state","createStory","preventDefault","props","title","description","country","selectedCountry","then","success","saveStory","storyId","clearForm","editStory","selectedStory","myStories","filter","story","id","render","countries","map","index","Stories","componentDidMount","mapStatetoProps","log","userStory"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserStories, postUserStories, deleteUserStories, putUserStories } from '../actions/userStories'\nimport { NavLink } from 'react-router-dom'\nimport './styles/MyStory.css'\n\nclass MyStory extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            Stories: [],\n            storyId: null,\n            selectedStory: null,\n            selectedCountry: 'Bolivia',\n            description: '',\n            title: '',\n            countries: [\"Bolivia\", \"Brazil\", \"Cambodia\", \"Colombia\", \"Ecuador\", \"El Salvador\", \"Ghana\", \"Guatemala\", \"Haiti\", \"Honduras\", \"Kiribati\", \"Madagascar\", \"Mongolia\", \"Nicaragua\", \"Paraguay\", \"Peru\", \"Philippines\", \"Sierra Leone\", \"Zimbabwe\"],\n        }\n    }\n    \n    componentDidMount() {\n        this.props.getUserStories()\n    }\n    editingStory = event => {\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        console.dir(this.state)\n    }\n\n    createStory = event => {\n        event.preventDefault()\n\n        this.props.postUserStories({\n            title: this.state.title,\n            description: this.state.description,\n            country: this.state.selectedCountry\n        }).then(success => {\n            \n            if (success) this.setState({\n                \n                selectedCountry: 'Bolivia',\n                description: '',\n                title: '',\n            })}\n        )\n\n    }\n\n    saveStory = event => {\n        event.preventDefault()\n\n        if (this.state.storyId) {\n            this.props.putUserStories(\n\n                this.state.storyId, {\n                    // ...this.state.selectedStory,\n                    title: this.state.title,\n                    description: this.state.description,\n                    country: this.state.selectedCountry\n                }\n            ).then(success => {\n                \n                if (success) this.clearForm()\n                this.props.getUserStories()\n            })\n        } else {\n            \n            this.props.postUserStories({\n                title: this.state.title,\n                description: this.state.description,\n                country: this.state.selectedCountry\n            }).then(success => {\n                \n                if (success) this.clearForm()\n\n            })\n        }\n    }\n\n    editStory = storyId => {\n        // event.preventDefault()\n        // console.log(storyId)\n        const selectedStory = this.props.myStories.filter(story => story.id === storyId)[0]\n\n        this.setState({\n            // selectedStory: selectedStory,\n            storyId: storyId,\n            selectedCountry: selectedStory.country,\n            title: selectedStory.title,\n            description: selectedStory.description\n        })\n        // console.dir(selectedStory)\n    }\n\n    clearForm = event => {\n        if (event) event.preventDefault()\n        this.setState({\n            storyId: null,                    \n            selectedCountry: 'Bolivia',\n            description: '',\n            title: '',\n        })\n    }\n    render = props => {\n        return (\n            <div>\n                <form className=\"story-form\">\n                    <h5>create & edit your story here</h5>\n\n                    <span>\n                        <input \n                            type='text'\n                            placeholder='Title'\n                            minLength='3' \n                            required\n                            value={this.state.title}\n                            onChange={this.editingStory}\n                            name='title'\n                        />           \n\n                        <select \n                            onChange={this.editingStory}\n                            value={this.state.selectedCountry}\n                            placeholder=\"Select a Country\"\n                            name='selectedCountry'\n                        >\n                            {this.state.countries.map(country => <option key={country}>{country}</option>)}\n                        </select>\n                    </span>                   \n\n\n                    <textarea\n                        type='text'\n                        placeholder='description'\n                        minLength='3' \n                        required\n                        value={this.state.description}\n                        onChange={this.editingStory}\n                        name='description'\n                    >\n\n                    </textarea>\n                    <span>\n\n                        <button onClick={this.saveStory}>Save</button>\n                        <button onClick={this.clearForm}>Clear</button>\n\n                    </span>\n                </form>\n                <ul className='stories-list'>\n               <li>hello darkness my old friend {/* {\n                    this.props.user.map((story, index) => (\n                        <li className='story-preview' key={story.id}>\n                            <h3>{story.title}</h3>\n                            <p>{story.description}</p>\n                            <NavLink to={`/stories/${story.id}`}>Continue Reading</NavLink>\n                            {/* <NavLink to={`/stories/${story.id}/edit`}> Edit</NavLink> */}\n                            <button onClick={() => this.editStory(story.id)}>Edit</button>\n                            <button onClick={() => this.props.deleteUserStories(index, story.id)}>Remove</button>\n                        </li>\n                    ))\n                } */}\n                </ul>\n            </div>\n        )\n    }\n} \n\n\nconst mapStatetoProps = state => {\n    console.log(state)\n    return {\n        myStories: state.userStory.myStories,\n    }\n} \n  \nexport default connect(mapStatetoProps, { getUserStories, postUserStories, deleteUserStories, putUserStories })(MyStory)\n  \n\n"]},"metadata":{},"sourceType":"module"}